{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "8158314413792548872"
    }
  },
  "parameters": {
    "functionAppName": {
      "type": "string",
      "defaultValue": "[format('func-costanalysis-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Azure Function App (must be globally unique)"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('sacostanalysis{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the storage account (must be globally unique)"
      }
    },
    "hostingPlanName": {
      "type": "string",
      "defaultValue": "[format('plan-costanalysis-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the hosting plan"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "runtime": {
      "type": "string",
      "defaultValue": "python",
      "allowedValues": [
        "python"
      ],
      "metadata": {
        "description": "The language worker runtime to load in the function app"
      }
    },
    "runtimeVersion": {
      "type": "string",
      "defaultValue": "3.11",
      "metadata": {
        "description": "The version of the language worker runtime"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Y1",
      "allowedValues": [
        "Y1",
        "EP1",
        "EP2",
        "EP3"
      ],
      "metadata": {
        "description": "The pricing tier for the hosting plan"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "Environment": "Production",
        "Application": "Cost Management",
        "Owner": "FinOps Team"
      },
      "metadata": {
        "description": "Tags to apply to all resources"
      }
    },
    "enableApplicationInsights": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable Application Insights"
      }
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": "[format('appi-costanalysis-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Application Insights name"
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "[format('law-costanalysis-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Log Analytics Workspace name for Application Insights"
      }
    }
  },
  "resources": {
    "storageAccount": {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-04-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "defaultToOAuthAuthentication": false,
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": true,
        "publicNetworkAccess": "Enabled",
        "networkAcls": {
          "defaultAction": "Allow"
        }
      }
    },
    "logAnalyticsWorkspace": {
      "condition": "[parameters('enableApplicationInsights')]",
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[parameters('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    "applicationInsights": {
      "condition": "[parameters('enableApplicationInsights')]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest",
        "WorkspaceResourceId": "[if(parameters('enableApplicationInsights'), resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName')), null())]"
      },
      "dependsOn": [
        "logAnalyticsWorkspace"
      ]
    },
    "hostingPlan": {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-12-01",
      "name": "[parameters('hostingPlanName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('skuName')]",
        "tier": "[if(equals(parameters('skuName'), 'Y1'), 'Dynamic', 'ElasticPremium')]"
      },
      "properties": {
        "reserved": true
      }
    },
    "functionApp": {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "functionapp,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "reserved": true,
        "httpsOnly": true,
        "clientAffinityEnabled": false,
        "siteConfig": {
          "linuxFxVersion": "[format('{0}|{1}', toUpper(parameters('runtime')), parameters('runtimeVersion'))]",
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys('storageAccount', '2023-04-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys('storageAccount', '2023-04-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[parameters('runtime')]"
            },
            {
              "name": "WEBSITE_PYTHON_DEFAULT_VERSION",
              "value": "[parameters('runtimeVersion')]"
            },
            {
              "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
              "value": "true"
            },
            {
              "name": "ENABLE_ORYX_BUILD",
              "value": "true"
            }
          ]
        }
      },
      "dependsOn": [
        "hostingPlan",
        "storageAccount"
      ]
    },
    "functionAppApplicationInsights": {
      "condition": "[parameters('enableApplicationInsights')]",
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2023-12-01",
      "name": "[format('{0}/{1}', parameters('functionAppName'), 'appsettings')]",
      "properties": {
        "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys('storageAccount', '2023-04-01').keys[0].value)]",
        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys('storageAccount', '2023-04-01').keys[0].value)]",
        "WEBSITE_CONTENTSHARE": "[toLower(parameters('functionAppName'))]",
        "FUNCTIONS_EXTENSION_VERSION": "~4",
        "FUNCTIONS_WORKER_RUNTIME": "[parameters('runtime')]",
        "WEBSITE_PYTHON_DEFAULT_VERSION": "[parameters('runtimeVersion')]",
        "SCM_DO_BUILD_DURING_DEPLOYMENT": "true",
        "ENABLE_ORYX_BUILD": "true",
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[if(parameters('enableApplicationInsights'), reference('applicationInsights').InstrumentationKey, '')]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[if(parameters('enableApplicationInsights'), reference('applicationInsights').ConnectionString, '')]",
        "ApplicationInsightsAgent_EXTENSION_VERSION": "~3",
        "XDT_MicrosoftApplicationInsights_Mode": "Recommended",
        "XDT_MicrosoftApplicationInsights_PreemptSdk": "1"
      },
      "dependsOn": [
        "applicationInsights",
        "functionApp",
        "storageAccount"
      ]
    }
  },
  "outputs": {
    "functionAppName": {
      "type": "string",
      "metadata": {
        "description": "Function App Name"
      },
      "value": "[parameters('functionAppName')]"
    },
    "functionAppUrl": {
      "type": "string",
      "metadata": {
        "description": "Function App URL"
      },
      "value": "[format('https://{0}', reference('functionApp').defaultHostName)]"
    },
    "functionAppResourceId": {
      "type": "string",
      "metadata": {
        "description": "Function App Resource ID"
      },
      "value": "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
    },
    "functionAppPrincipalId": {
      "type": "string",
      "metadata": {
        "description": "Function App Principal ID (for additional role assignments)"
      },
      "value": "[reference('functionApp', '2023-12-01', 'full').identity.principalId]"
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Storage Account Name"
      },
      "value": "[parameters('storageAccountName')]"
    },
    "applicationInsightsName": {
      "type": "string",
      "metadata": {
        "description": "Application Insights Name"
      },
      "value": "[if(parameters('enableApplicationInsights'), parameters('applicationInsightsName'), '')]"
    },
    "applicationInsightsInstrumentationKey": {
      "type": "securestring",
      "metadata": {
        "description": "Application Insights Instrumentation Key"
      },
      "value": "[if(parameters('enableApplicationInsights'), reference('applicationInsights').InstrumentationKey, '')]"
    },
    "deploymentInstructions": {
      "type": "object",
      "metadata": {
        "description": "Deployment Guide"
      },
      "value": {
        "step1": "Deploy this Bicep template to create the Azure resources",
        "step2": "[format('Deploy your function code using: func azure functionapp publish {0}', parameters('functionAppName'))]",
        "step3": "Get function keys from Azure portal: Function App → Functions → Function Keys",
        "step4": "Update your Azure AI Foundry agent configurations with the function URLs and keys",
        "endpoints": {
          "analyze": "[format('https://{0}/api/analyze', reference('functionApp').defaultHostName)]",
          "costAnalysis": "[format('https://{0}/api/cost-analysis', reference('functionApp').defaultHostName)]",
          "example": "[format('https://{0}/api/example', reference('functionApp').defaultHostName)]",
          "costExample": "[format('https://{0}/api/cost-example', reference('functionApp').defaultHostName)]"
        }
      }
    }
  }
}