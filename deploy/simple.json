{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "17522861906596734557"
    }
  },
  "parameters": {
    "functionAppName": {
      "type": "string",
      "defaultValue": "fun-cost-agent-working",
      "metadata": {
        "description": "Name of the Function App"
      }
    },
    "hostingPlanName": {
      "type": "string",
      "defaultValue": "[format('FLEX-{0}-{1}', parameters('functionAppName'), uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the Flex Consumption Plan"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('{0}storage', toLower(replace(resourceGroup().name, '-', '')))]",
      "metadata": {
        "description": "Name of the Storage Account"
      }
    },
    "managedIdentityName": {
      "type": "string",
      "defaultValue": "[format('{0}-identities-{1}', resourceGroup().name, uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Name of the User Assigned Managed Identity"
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the Application Insights component"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "prod",
      "metadata": {
        "description": "Environment (dev, test, prod)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "runtime": {
      "type": "string",
      "defaultValue": "python",
      "metadata": {
        "description": "Function App runtime"
      }
    },
    "runtimeVersion": {
      "type": "string",
      "defaultValue": "3.11",
      "metadata": {
        "description": "Function App runtime version"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "FlexConsumption",
      "metadata": {
        "description": "Function App SKU (FlexConsumption for Flex Consumption plan)"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "Environment": "[toUpper(parameters('environment'))]",
        "Application": "Azure Cost Management",
        "Project": "Cost Optimization",
        "Owner": "FinOps Team",
        "CostCenter": "IT-Operations"
      },
      "metadata": {
        "description": "Resource tags"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[parameters('managedIdentityName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]"
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "tags": "[union(parameters('tags'), createObject('hidden-link: /app-insights-resource-id', format('/subscriptions/{0}/resourceGroups/{1}/providers/microsoft.insights/components/{2}', subscription().subscriptionId, resourceGroup().name, parameters('appInsightsName')))]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-04-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": false,
        "publicNetworkAccess": "Enabled",
        "allowCrossTenantReplication": false,
        "defaultToOAuthAuthentication": true,
        "networkAcls": {
          "defaultAction": "Allow"
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-12-01",
      "name": "[parameters('hostingPlanName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('skuName')]",
        "tier": "FlexConsumption"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "functionapp,linux",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]": {}
        }
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "reserved": true,
        "httpsOnly": false,
        "clientAffinityEnabled": false,
        "storageAccountRequired": false,
        "keyVaultReferenceIdentity": "SystemAssigned",
        "siteConfig": {
          "numberOfWorkers": 1,
          "alwaysOn": false,
          "functionAppScaleLimit": 100,
          "minimumElasticInstanceCount": 0
        },
        "functionAppConfig": {
          "deployment": {
            "storage": {
              "type": "blobcontainer",
              "value": "[format('https://{0}.blob.core.windows.net/app-package-{1}-{2}', parameters('storageAccountName'), parameters('functionAppName'), uniqueString(resourceGroup().id))]",
              "authentication": {
                "type": "userassignedidentity",
                "userAssignedIdentityResourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
              }
            }
          },
          "runtime": {
            "name": "[parameters('runtime')]",
            "version": "[parameters('runtimeVersion')]"
          },
          "scaleAndConcurrency": {
            "alwaysReady": [],
            "maximumInstanceCount": 100,
            "instanceMemoryMB": 2048
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]",
        "[resourceId('microsoft.insights/components', parameters('appInsightsName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
      "scope": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName'))]"
      ]
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "metadata": {
        "description": "Function App Name"
      },
      "value": "[parameters('functionAppName')]"
    },
    "functionAppUrl": {
      "type": "string",
      "metadata": {
        "description": "Function App URL"
      },
      "value": "[format('https://{0}.azurewebsites.net', parameters('functionAppName'))]"
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Storage Account Name"
      },
      "value": "[parameters('storageAccountName')]"
    },
    "managedIdentityName": {
      "type": "string",
      "metadata": {
        "description": "User Assigned Managed Identity Name"
      },
      "value": "[parameters('managedIdentityName')]"
    },
    "managedIdentityPrincipalId": {
      "type": "string",
      "metadata": {
        "description": "Managed Identity Principal ID"
      },
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('managedIdentityName')), '2023-01-31').principalId]"
    },
    "postDeploymentInstructions": {
      "type": "object",
      "metadata": {
        "description": "Instructions for completing the deployment"
      },
      "value": {
        "step1": "Deploy function code using VS Code Azure Functions extension or: func azure functionapp publish [functionAppName]",
        "step2": "The Function App uses Flex Consumption plan with user-assigned managed identity for blob storage authentication",
        "step3": "No storage keys required - authentication is handled via managed identity",
        "functionEndpoints": {
          "analyze": "[format('https://{0}.azurewebsites.net/api/analyze', parameters('functionAppName'))]",
          "costAnalysis": "[format('https://{0}.azurewebsites.net/api/cost-analysis', parameters('functionAppName'))]",
          "example": "[format('https://{0}.azurewebsites.net/api/example', parameters('functionAppName'))]",
          "costExample": "[format('https://{0}.azurewebsites.net/api/cost-example', parameters('functionAppName'))]"
        }
      }
    }
  }
}